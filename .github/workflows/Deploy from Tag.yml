name: Tag Parser Workflow

on:
  push:
    tags:
      - "v*"

jobs:
  parse-tag:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.tag-parts.outputs.version }}
      build_number: ${{ steps.tag-parts.outputs.build_number }}
      app: ${{ steps.tag-parts.outputs.app }}
      environment: ${{ steps.tag-parts.outputs.environment }}
    steps:
      - name: Extract tag parts
        id: tag-parts
        run: |
          # Remove 'v' prefix from tag
          TAG_WITHOUT_V=${GITHUB_REF_NAME#v}

          # Split by '-' and store parts
          IFS='-' read -r VERSION_WITH_BUILD APP ENV <<< "$TAG_WITHOUT_V"

          # Extract version without build number (before '+' if it exists)
          VERSION=${VERSION_WITH_BUILD%+*}

          BUILD_NUMBER=""
          if [[ $VERSION_WITH_BUILD == *"+"* ]]; then
            BUILD_NUMBER=${VERSION_WITH_BUILD#*+}
          fi

          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "build_number=$BUILD_NUMBER" >> $GITHUB_OUTPUT
          echo "app=$APP" >> $GITHUB_OUTPUT
          echo "environment=${ENV,,}" >> $GITHUB_OUTPUT  # Convert to lowercase

          echo "Full tag: $GITHUB_REF_NAME"
          echo "Version: $VERSION"
          echo "Build Number: $BUILD_NUMBER"
          echo "App: $APP"
          echo "Environment: $ENV"

          if [ -z "$VERSION" ] || [ -z "$APP" ] || [ -z "$ENV" ]; then
            echo "Invalid tag format. Expected format: v<version>-<app>-<environment>"
            exit 1
          fi

  prod-deploy:
    runs-on: ubuntu-latest
    needs: parse-tag
    if: ${{ needs.parse-tag.outputs.environment == 'prod' }}
    steps:
      - name: Print environment variables
        run: |
          echo "Version: ${{ needs.parse-tag.outputs.version }}"
          echo "Build Number: ${{ needs.parse-tag.outputs.build_number }}"
          echo "App: ${{ needs.parse-tag.outputs.app }}"
          echo "Environment: ${{ needs.parse-tag.outputs.environment }}"

  dev-deploy:
    runs-on: ubuntu-latest
    needs: parse-tag
    if: ${{ needs.parse-tag.outputs.environment == 'dev' }}
    steps:
      - name: Print environment variables
        run: |
          echo "Version: ${{ needs.parse-tag.outputs.version }}"
          echo "Build Number: ${{ needs.parse-tag.outputs.build_number }}"
          echo "App: ${{ needs.parse-tag.outputs.app }}"
          echo "Environment: ${{ needs.parse-tag.outputs.environment }}"
  release:
    if: ${{ needs.parse-tag.outputs.environment == 'prod' || needs.parse-tag.outputs.environment == 'stag'}}
    name: Release
    runs-on: ubuntu-latest
    needs: parse-tag
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.STANLEY_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: ${{ github.ref }}
          release_name: Release v${{ needs.parse-tag.outputs.version }} | ${{ needs.parse-tag.outputs.app }} > ${{ needs.parse-tag.outputs.environment }}
          draft: false
          prerelease: true
